------------- | -------------
Store | the store number
Dept | the department number
Date | the week
Weekly_Sales | sales for the given department in the given store
IsHoliday | whether the week is a special holiday week
```{r}
train_df <- read.csv("../01 Data/train.csv", nrows = 50, stringsAsFactors = FALSE)
```
##### Train.csv
Name of Column | Description
------------- | -------------
Store | the store number
Type | type of store
Size | size of store
```{r}
read.csv("../01 Data/stores.csv", stringsAsFactors = FALSE)
```
##### Features.csv
Name of Column | Description
------------- | -------------
Store | the store number
Date | the week
Temperature | average temperature in the region
Fuel_Price | cost of fuel in the region
MarkDown1-5 | anonymized data related to promotional markdowns that Walmart is running. MarkDown data is only available after Nov 2011, and is not available for all stores all the time. Any missing value is marked with an NA.
CPI | the consumer price index
Unemployment | the unemployment rate
IsHoliday | whether the week is a special holiday week
```{r}
read.csv("../01 Data/stores.csv", nrows=50, stringsAsFactors = FALSE)
```
### STEP 2: Clean up the data Using Extract, Transform, and Load techniques.
The process of ETL is straightforward. We read in the file, figure out what columns are considered dimensions and measured and process numbers as needed.
After running the R_ETL script, we copy & paste the cat(sql) result and run it in SQL Developer to create new tables. One thing to note that some names are not valid as column names in SQL to we changed them. For example, Store is renamed to Store_Id, Date is renamed to Date_of_Week, and so on. In addition, the R_ETL also outputs a reformatted version where the data is cleaned up nicely to meet the standards for importing to SQL database, which we then use to import in the databse. At this stage, it's neccessary to also match the old column names to the new column names we dictated when we first create the empty table.
```{r}
source("../01 Data/Data.R", echo = TRUE)
```
### STEP 3: Plot Data With Tableau
The SQL query used to gather data from all three tables using inner join in Tableau is a little bit different from the sql query for R.
```
select walmart_train.store_id,
walmart_train.dept,
TO_DATE(walmart_train.DATE_OF_WEEK,'YYYY-MM-DD') as real_date,
walmart_train.DATE_OF_WEEK,
walmart_train.isholiday,
walmart_train.weekly_sales,
walmart_stores.type_of_store,
walmart_stores.size_of_store,
walmart_features.fuel_price,
walmart_features.temperature,
walmart_features.cpi,
walmart_features.unemployment
from walmart_train, walmart_stores, walmart_features
where walmart_train.store_id = walmart_stores.store_id
and walmart_train.store_id = walmart_features.store_id
and walmart_train.DATE_OF_WEEK = TO_CHAR(TO_DATE(walmart_features.DATE_OF_WEEK,'MM/DD/YYYY'), 'YYYY-MM-DD')
```
This way we can have a comprehensive way of viewing the weekly sales data as long as all the other factors that could have affected it.
Also note that in order to not run into any error in Tableau, we have made a another column called **real_date** column where we convert the format of the string to YYYY-MM-DD. If not, we will run into an error where Tableau has a problem transforming and retrieving data with the query.
#### Sets: Weekly Sales Average by Type of Store
For our set calcuation, we created a set with the top 5 stores with the highest weekly sales. We did so by first plotting the average weekly sales per store through bar charts, select the top 5 stores with the highest bars, and create a set out of it.
Then we plot the sales vs. time with the set as a filter to compare.
![](../02 Tableau/weeklysalesSets.png)
We also used Cross Table to visualize how sales per department perform against the Consumer Price Index by normalizing the sales. In this visualization, we broke it down by Store and Department, color it by Sales/CPI, and labeled using Weekly Sales. The picture below is a quick graphical visual.
![](../02 Tableau/weeklySalesByDept&Store-Top5.png)
The same plot is shown here, but with weekly sales value.
![](../02 Tableau/weeklySalesByDept&Store.png)
#### Table Calculation: Weekly Sales Average by Type of Store
For our table calculation, we wanted to compare the weekly sales average for each type of store to the average of each store within that type.
To do this, we created a bar graph separating the stores into their respective Type, either A or B, and calculated the average sales for each pane. Then, we created the following table calculation: SUM([WEEKLY_SALES])-WINDOW_AVG(sum([WEEKLY_SALES])) which calculates the window average for each pane that we just plotted, and subtracts it from the sales for each store.
![](../02 Tableau/TypeofStoreSales Averages2010.png)
![](../02 Tableau/TypeofStoreSales Averages2011.png)
These graphs will allow us to see how a particular store compares to stores that are similar to it in order to analyze its weekly sales more fairly. For example, below are the 2012 graphs for weekly sales by type of store.
![](../02 Tableau/EntireTableTypeSalesAverages2012.png)
In this first graph, it appears that Store 12 is performing poorly at below the average.
![](../02 Tableau/TypeofStoreSales Averages2012.png)
However, when we compare Store 12 to similar Type B stores, it is actually out-performing most of the other stores. This would not be noticed in just comparing the sales to the overall table average. However, by calculating the average for each pane, we were able to notice this.
runApp('C:/Users/jenng/OneDrive/School/Class of 2017 (UT)/CS 329E - Data Visualization/Projects/dv_tproject6_quynh/03Shiny')
runApp('C:/Users/jenng/OneDrive/School/Class of 2017 (UT)/CS 329E - Data Visualization/Projects/dv_tproject6_quynh/03Shiny')
runApp('C:/Users/jenng/OneDrive/School/Class of 2017 (UT)/CS 329E - Data Visualization/Projects/dv_tproject6_quynh/03Shiny')
runApp('C:/Users/jenng/OneDrive/School/Class of 2017 (UT)/CS 329E - Data Visualization/Projects/dv_tproject6_quynh/03Shiny')
runApp('C:/Users/jenng/OneDrive/School/Class of 2017 (UT)/CS 329E - Data Visualization/Projects/dv_tproject6_quynh/03Shiny')
shiny::runApp()
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
require(shiny)
require(gridExtra)
df <- readRDS("../01 Data/walmart_data.rds")
df$SALES_PER_CPI = as.numeric(df$WEEKLY_SALES) + as.numeric(df$CPI)
names(df)
summary(df)
avg_sales_df <- df %>% group_by(STORE_ID) %>% summarise(AVG_SALES=mean(WEEKLY_SALES)) %>% arrange(desc(AVG_SALES))
top_5_stores <- as.vector(head(avg_sales_df,5)$STORE_ID)
all_stores <- as.vector(unique(avg_sales_df$STORE_ID))
not_top_5 <- setdiff(all_stores, top_5_stores)
d4 <- df %>% filter(STORE_ID %in% top_5_stores)
unique(d4$STORE_ID)
runApp()
runApp()
ggplot(df, aes(x = STORE_ID, y=WEEKLY_SALES)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity")
ggplot(df, aes(x = STORE_ID, y=WEEKLY_SALES)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip()
ggplot(df, aes(x = STORE_ID, y=WEEKLY_SALES)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + geom_tile(mapping=TYPE_OF_STORE)
names(df)
ggplot(df, aes(x = STORE_ID, y=WEEKLY_SALES)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + geom_tile(mapping=TYPE_OF_STORE)
ggplot(df, aes(x = STORE_ID, y=WEEKLY_SALES)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + geom_tile(mapping="TYPE_OF_STORE")
ggplot(df, aes(x = STORE_ID, y=WEEKLY_SALES)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + geom_tile(aes(z=TYPE_OF_STORE))
ggplot(df, aes(x = STORE_ID, y=WEEKLY_SALES)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip()
ggplot(df, aes(x = STORE_ID, y=WEEKLY_SALES)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE)
ggplot(df, aes(x = STORE_ID, y=WEEKLY_SALES)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(TYPE_OF_STORE~)
ggplot(df, aes(x = STORE_ID, y=WEEKLY_SALES)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(TYPE_OF_STORE~.)
ggplot(df, aes(x = STORE_ID, y=WEEKLY_SALES)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE)
ggplot(df, aes(x = STORE_ID, y=WEEKLY_SALES)) + scale_x_continuous(breaks=ii)
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE)
ggplot(df, aes(x = STORE_ID, y=WEEKLY_SALES)) + scale_x_continuous()
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE)
ggplot(df, aes(x = STORE_ID, y=WEEKLY_SALES)) + scale_x_continuous() +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE)
ggplot(df, aes(x = STORE_ID, y=WEEKLY_SALES)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE)
ggplot(df, aes(x = STORE_ID, y=WEEKLY_SALES)) + scale_x_discrete(y) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE)
ggplot(df, aes(x = STORE_ID, y=WEEKLY_SALES)) + scale_x_discrete() +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE)
ggplot(df, aes(x = STORE_ID, y=WEEKLY_SALES)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE)
average_sales_A <- df %>% filter(TYPE_OF_STORE == "A")
average_sales_B <- df %>% filter(TYPE_OF_STORE == "B")
View(average_sales_B)
avg_sales_A = avg(stores_A$weekly_sales)
avg_sales_A = average(stores_A$weekly_sales)
avg_sales_A = mean(stores_A$weekly_sales)
avg_sales_by_type <- df %>% group_by(TYPE_OF_STORE) %>% summarise(AVG_SALES=mean(WEEKLY_SALES)) %>% arrange(desc(AVG_SALES))
View(avg_sales_by_type)
avg_sales_by_type <- df %>% group_by(TYPE_OF_STORE) %>% summarise(AVG_SALES=mean(WEEKLY_SALES)) %>% arrange(desc(AVG_SALES))
avg_sales_B = avg_sales_by_type$AVG_SALES[1]
avg_sales_B
avg_sales_B = avg_sales_by_type$AVG_SALES[2]
View(avg_sales_df)
avg_sales_df <- df %>% group_by(STORE_ID, TYPE_OF_STORE) %>% summarise(AVG_SALES=mean(WEEKLY_SALES)) %>% arrange(desc(AVG_SALES))
avg_sales_df$AVG_SALE_OF_TYPE <- ifelse(avg_sales_df$TYPE_OF_STORE == "A",avg_sales_A, avg_sales_B)
avg_sales_by_type <- df %>% group_by(TYPE_OF_STORE) %>% summarise(AVG_SALES=mean(WEEKLY_SALES)) %>% arrange(desc(AVG_SALES))
avg_sales_A = avg_sales_by_type$AVG_SALES[1]
avg_sales_B = avg_sales_by_type$AVG_SALES[2]
avg_sales_df$AVG_SALE_OF_TYPE <- ifelse(avg_sales_df$TYPE_OF_STORE == "A",avg_sales_A, avg_sales_B)
avg_sales_df$DIFFERENCE <- avg_sales_df$AVG_SALES-avg_sales_df$AVG_SALE_OF_TYPE
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
require(shiny)
require(gridExtra)
df <- readRDS("../01 Data/walmart_data.rds")
df$SALES_PER_CPI = as.numeric(df$WEEKLY_SALES) + as.numeric(df$CPI)
names(df)
summary(df)
avg_sales_df <- df %>% group_by(STORE_ID, TYPE_OF_STORE) %>% summarise(AVG_SALES=sum(WEEKLY_SALES)) %>% arrange(desc(AVG_SALES))
top_5_stores <- as.vector(head(avg_sales_df,5)$STORE_ID)
all_stores <- as.vector(unique(avg_sales_df$STORE_ID))
not_top_5 <- setdiff(all_stores, top_5_stores)
d4 <- df %>% filter(STORE_ID %in% top_5_stores)
unique(d4$STORE_ID)
avg_sales_by_type <- df %>% group_by(TYPE_OF_STORE) %>% summarise(AVG_SALES=avg(WEEKLY_SALES)) %>% arrange(desc(AVG_SALES))
avg_sales_A = avg_sales_by_type$AVG_SALES[1]
avg_sales_B = avg_sales_by_type$AVG_SALES[2]
avg_sales_df$AVG_SALE_OF_TYPE <- ifelse(avg_sales_df$TYPE_OF_STORE == "A",avg_sales_A, avg_sales_B)
avg_sales_df$DIFFERENCE <- avg_sales_df$AVG_SALES-avg_sales_df$AVG_SALE_OF_TYPE
ggplot(df, aes(x = STORE_ID, y=WEEKLY_SALES)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE)
avg_sales_by_type <- avg_sales_df %>% group_by(TYPE_OF_STORE) %>% summarise(AVG_SALES=avg(AVG_SALES)) %>% arrange(desc(AVG_SALES))
avg_sales_A = avg_sales_by_type$AVG_SALES[1]
avg_sales_B = avg_sales_by_type$AVG_SALES[2]
avg_sales_df <- df %>% group_by(STORE_ID, TYPE_OF_STORE) %>% summarise(SUM_OF_SALES=sum(WEEKLY_SALES)) %>% arrange(desc(AVG_SALES))
top_5_stores <- as.vector(head(avg_sales_df,5)$STORE_ID)
all_stores <- as.vector(unique(avg_sales_df$STORE_ID))
not_top_5 <- setdiff(all_stores, top_5_stores)
d4 <- df %>% filter(STORE_ID %in% top_5_stores)
unique(d4$STORE_ID)
avg_sales_by_type <- avg_sales_df %>% group_by(TYPE_OF_STORE) %>% summarise(AVG_SALES=avg(AVG_SALES)) %>% arrange(desc(AVG_SALES))
avg_sales_A = avg_sales_by_type$AVG_SALES[1]
avg_sales_B = avg_sales_by_type$AVG_SALES[2]
avg_sales_by_type <- avg_sales_df %>% group_by(TYPE_OF_STORE) %>% summarise(AVG_SALES=mean(AVG_SALES)) %>% arrange(desc(AVG_SALES))
avg_sales_A = avg_sales_by_type$AVG_SALES[1]
avg_sales_B = avg_sales_by_type$AVG_SALES[2]
avg_sales_df$AVG_SALE_OF_TYPE <- ifelse(avg_sales_df$TYPE_OF_STORE == "A",avg_sales_A, avg_sales_B)
avg_sales_df$DIFFERENCE <- avg_sales_df$AVG_SALES-avg_sales_df$AVG_SALE_OF_TYPE
ggplot(avg_sales_df, aes(x = STORE_ID, y=WEEKLY_SALES)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
require(shiny)
require(gridExtra)
df <- readRDS("../01 Data/walmart_data.rds")
df$SALES_PER_CPI = as.numeric(df$WEEKLY_SALES) + as.numeric(df$CPI)
names(df)
summary(df)
avg_sales_df <- df %>% group_by(STORE_ID, TYPE_OF_STORE) %>% summarise(SUM_OF_SALES=sum(WEEKLY_SALES)) %>% arrange(desc(AVG_SALES))
top_5_stores <- as.vector(head(avg_sales_df,5)$STORE_ID)
all_stores <- as.vector(unique(avg_sales_df$STORE_ID))
not_top_5 <- setdiff(all_stores, top_5_stores)
d4 <- df %>% filter(STORE_ID %in% top_5_stores)
unique(d4$STORE_ID)
avg_sales_by_type <- avg_sales_df %>% group_by(TYPE_OF_STORE) %>% summarise(AVG_SALES=mean(AVG_SALES)) %>% arrange(desc(AVG_SALES))
avg_sales_A = avg_sales_by_type$AVG_SALES[1]
avg_sales_B = avg_sales_by_type$AVG_SALES[2]
avg_sales_df$AVG_SALE_OF_TYPE <- ifelse(avg_sales_df$TYPE_OF_STORE == "A",avg_sales_A, avg_sales_B)
avg_sales_df$DIFFERENCE <- avg_sales_df$AVG_SALES-avg_sales_df$AVG_SALE_OF_TYPE
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE)
avg_sales_df <- df %>% group_by(STORE_ID, TYPE_OF_STORE) %>% summarise(SUM_OF_SALES=sum(WEEKLY_SALES)) %>% arrange(desc(AVG_SALES))
avg_sales_df <- df %>% group_by(STORE_ID, TYPE_OF_STORE) %>% summarise(SUM_OF_SALES=sum(WEEKLY_SALES)) %>% arrange(desc(AVG_SALES))
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
require(shiny)
require(gridExtra)
df <- readRDS("../01 Data/walmart_data.rds")
df$SALES_PER_CPI = as.numeric(df$WEEKLY_SALES) + as.numeric(df$CPI)
names(df)
summary(df)
avg_sales_df <- df %>% group_by(STORE_ID, TYPE_OF_STORE) %>% summarise(SUM_OF_SALES=sum(WEEKLY_SALES)) %>% arrange(desc(SUM_OF_SALES))
top_5_stores <- as.vector(head(avg_sales_df,5)$STORE_ID)
all_stores <- as.vector(unique(avg_sales_df$STORE_ID))
not_top_5 <- setdiff(all_stores, top_5_stores)
d4 <- df %>% filter(STORE_ID %in% top_5_stores)
unique(d4$STORE_ID)
avg_sales_by_type <- avg_sales_df %>% group_by(TYPE_OF_STORE) %>% summarise(AVG_SALES=mean(AVG_SALES)) %>% arrange(desc(AVG_SALES))
avg_sales_A = avg_sales_by_type$AVG_SALES[1]
avg_sales_B = avg_sales_by_type$AVG_SALES[2]
avg_sales_df$AVG_SALE_OF_TYPE <- ifelse(avg_sales_df$TYPE_OF_STORE == "A",avg_sales_A, avg_sales_B)
avg_sales_df$DIFFERENCE <- avg_sales_df$AVG_SALES-avg_sales_df$AVG_SALE_OF_TYPE
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE)
avg_sales_df$DIFFERENCE <- avg_sales_df$AVG_SALES-avg_sales_df$AVG_SALE_OF_TYPE
avg_sales_df$DIFFERENCE <- avg_sales_df$SUM_OF_SALES-avg_sales_df$AVG_SALE_OF_TYPE
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,colour=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,colour=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_colour_hue()
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,colour=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) + geom_text(aes(label=DIFFERENCE), vjust=0) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) + geom_text(aes(label=DIFFERENCE), vjust=0) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) + geom_text(aes(label=round(DIFFERENCE,0)), vjust=0) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) + geom_text(aes(label=round(DIFFERENCE,0)), hjust=-.25) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.25) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.15) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) + geom_text(aes(label=round(DIFFERENCE,0)), hjust=-.15) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) + geom_text(aes(label=round(DIFFERENCE,0)), hjust=-.1) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) + geom_text(aes(y=round(DIFFERENCE,0)), hjust=-.1) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) + geom_text(aes(round(DIFFERENCE,0)), hjust=-.1) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) + geom_text(aes(label=round(DIFFERENCE,0)), hjust=-.1) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) + geom_text(aes(label=round(DIFFERENCE,0)), hjust=-.1,vjust=1.5) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=-.1)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=-.3)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.3)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.5)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+1.5)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=0)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=-.3)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2()  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.5)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2(high=muted("green"))  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.5)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2(high=("green"))  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.5)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2(high=("#ff0000"))  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.5)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2(high=("ff0000"))  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.5)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2(high=("green4"))  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.5)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2(low=("red2"),high=("green4"))  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.5)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Weekly Average Sales based on Store ID and Holiday For Store')+
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2(low=("red3"),high=("green4"))  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.5)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Type of Store Sales Averages')+ xlab("STORE ID") + ylab("Sum of Sales") +
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2(low=("red3"),high=("green4"))  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.5)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Type of Store Sales Averages')+ xlab("Store") + ylab("Sum of Sales") +
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2(low=("red3"),high=("green4"))  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.5)
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Type of Store Sales Averages')+ xlab("Store") + ylab("Sum of Sales") +
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2(low=("red3"),high=("green4"))  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.65)
runApp()
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
require(shiny)
require(gridExtra)
df <- readRDS("../01 Data/walmart_data.rds")
df$SALES_PER_CPI = as.numeric(df$WEEKLY_SALES) + as.numeric(df$CPI)
names(df)
summary(df)
avg_sales_df <- df %>% group_by(STORE_ID, TYPE_OF_STORE) %>% summarise(SUM_OF_SALES=sum(WEEKLY_SALES)) %>% arrange(desc(SUM_OF_SALES))
avg_sales_by_type <- avg_sales_df %>% group_by(TYPE_OF_STORE) %>% summarise(AVG_SALES=mean(AVG_SALES)) %>% arrange(desc(AVG_SALES))
avg_sales_A = avg_sales_by_type$AVG_SALES[1]
avg_sales_B = avg_sales_by_type$AVG_SALES[2]
avg_sales_df$AVG_SALE_OF_TYPE <- ifelse(avg_sales_df$TYPE_OF_STORE == "A",avg_sales_A, avg_sales_B)
avg_sales_df$DIFFERENCE <- avg_sales_df$SUM_OF_SALES-avg_sales_df$AVG_SALE_OF_TYPE
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Type of Store Sales Averages')+ xlab("Store") + ylab("Sum of Sales") +
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2(low=("red3"),high=("green4"))  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.65)
runApp()
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
require(shiny)
require(gridExtra)
df <- readRDS("../01 Data/walmart_data.rds")
df$SALES_PER_CPI = as.numeric(df$WEEKLY_SALES) + as.numeric(df$CPI)
names(df)
summary(df)
avg_sales_df <- df %>% group_by(STORE_ID, TYPE_OF_STORE) %>% summarise(SUM_OF_SALES=sum(WEEKLY_SALES)) %>% arrange(desc(SUM_OF_SALES))
avg_sales_A <- mean(df %>% filter(TYPE_OF_STORE == "A"))
avg_sales_A <- mean(df %>% filter(TYPE_OF_STORE == "B"))
avg_sales_df$AVG_SALE_OF_TYPE <- ifelse(avg_sales_df$TYPE_OF_STORE == "A",avg_sales_A, avg_sales_B)
avg_sales_df$DIFFERENCE <- avg_sales_df$SUM_OF_SALES-avg_sales_df$AVG_SALE_OF_TYPE
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Type of Store Sales Averages')+ xlab("Store") + ylab("Sum of Sales") +
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2(low=("red3"),high=("green4"))  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.65)
avg_sales_A <- mean(df %>% filter(TYPE_OF_STORE == "A"))
avg_sales_B <- mean(df %>% filter(TYPE_OF_STORE == "B"))
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
require(shiny)
require(gridExtra)
df <- readRDS("../01 Data/walmart_data.rds")
df$SALES_PER_CPI = as.numeric(df$WEEKLY_SALES) + as.numeric(df$CPI)
names(df)
summary(df)
avg_sales_df <- df %>% group_by(STORE_ID, TYPE_OF_STORE) %>% summarise(SUM_OF_SALES=sum(WEEKLY_SALES)) %>% arrange(desc(SUM_OF_SALES))
avg_sales_A <- mean(df %>% filter(TYPE_OF_STORE == "A"))
avg_sales_B <- mean(df %>% filter(TYPE_OF_STORE == "B"))
avg_sales_df$AVG_SALE_OF_TYPE <- ifelse(avg_sales_df$TYPE_OF_STORE == "A",avg_sales_A, avg_sales_B)
avg_sales_df$DIFFERENCE <- avg_sales_df$SUM_OF_SALES-avg_sales_df$AVG_SALE_OF_TYPE
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Type of Store Sales Averages')+ xlab("Store") + ylab("Sum of Sales") +
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2(low=("red3"),high=("green4"))  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.65)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
require(shiny)
require(gridExtra)
df <- readRDS("../01 Data/walmart_data.rds")
df$SALES_PER_CPI = as.numeric(df$WEEKLY_SALES) + as.numeric(df$CPI)
names(df)
summary(df)
avg_sales_df <- df %>% group_by(STORE_ID, TYPE_OF_STORE) %>% summarise(SUM_OF_SALES=sum(WEEKLY_SALES)) %>% arrange(desc(SUM_OF_SALES))
store_A <- (avg_sales_df %>% filter(TYPE_OF_STORE == "A"))
store_B <- (avg_sales_df %>% filter(TYPE_OF_STORE == "B"))
avg_sales_A <- mean(store_A$SUM_OF_SALES)
avg_sales_A <- mean(store_B$SUM_OF_SALES)
avg_sales_df$AVG_SALE_OF_TYPE <- ifelse(avg_sales_df$TYPE_OF_STORE == "A",avg_sales_A, avg_sales_B)
avg_sales_df$DIFFERENCE <- avg_sales_df$SUM_OF_SALES-avg_sales_df$AVG_SALE_OF_TYPE
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Type of Store Sales Averages')+ xlab("Store") + ylab("Sum of Sales") +
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2(low=("red3"),high=("green4"))  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.65)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
require(shiny)
require(gridExtra)
df <- readRDS("../01 Data/walmart_data.rds")
df$SALES_PER_CPI = as.numeric(df$WEEKLY_SALES) + as.numeric(df$CPI)
names(df)
summary(df)
avg_sales_df <- df %>% group_by(STORE_ID, TYPE_OF_STORE) %>% summarise(SUM_OF_SALES=sum(WEEKLY_SALES)) %>% arrange(desc(SUM_OF_SALES))
store_A <- (avg_sales_df %>% filter(TYPE_OF_STORE == "A"))
store_B <- (avg_sales_df %>% filter(TYPE_OF_STORE == "B"))
avg_sales_A <- mean(store_A$SUM_OF_SALES)
avg_sales_B <- mean(store_B$SUM_OF_SALES)
avg_sales_df$AVG_SALE_OF_TYPE <- ifelse(avg_sales_df$TYPE_OF_STORE == "A",avg_sales_A, avg_sales_B)
avg_sales_df$DIFFERENCE <- avg_sales_df$SUM_OF_SALES-avg_sales_df$AVG_SALE_OF_TYPE
ggplot(avg_sales_df, aes(x = STORE_ID, y=SUM_OF_SALES,fill=DIFFERENCE)) +
labs(title='Type of Store Sales Averages')+ xlab("Store") + ylab("Sum of Sales") +
geom_bar(stat = "identity") + coord_flip() + facet_wrap(~TYPE_OF_STORE) + scale_fill_gradient2(low=("red3"),high=("green4"))  + geom_text(aes(label=round(DIFFERENCE,0)), hjust=+.65)
runApp()
df$YEAR <- substr(df$DATE_OF_WEEK, 0, 4)
View(df)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
require("RCurl")
require("jsonlite")
require("dplyr")
# Read in data from DB
walmart_features <- data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:5001/rest/native/?query="select * from WALMART_FEATURES"'),httpheader=c(DB='jdbc:oracle:thin:@aevum.cs.utexas.edu:1521/f16pdb', USER='cs329e_qmn76', PASS='orcl_qmn76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
walmart_stores <- data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:5001/rest/native/?query="select * from WALMART_STORES"'),httpheader=c(DB='jdbc:oracle:thin:@aevum.cs.utexas.edu:1521/f16pdb', USER='cs329e_qmn76', PASS='orcl_qmn76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
# Here the data is retrieved in batches because else it's takes to long for the REST server to respond
walmart_train1 <- data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:5001/rest/native/?query="select * from WALMART_TRAIN where store_id in (1,2,3,4,5,6)"'),httpheader=c(DB='jdbc:oracle:thin:@aevum.cs.utexas.edu:1521/f16pdb', USER='cs329e_qmn76', PASS='orcl_qmn76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
walmart_train2 <- data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:5001/rest/native/?query="select * from WALMART_TRAIN where store_id in (7,8,9,10,11,12)"'),httpheader=c(DB='jdbc:oracle:thin:@aevum.cs.utexas.edu:1521/f16pdb', USER='cs329e_qmn76', PASS='orcl_qmn76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
#walmart_train3 <- data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:5001/rest/native/?query="select * from WALMART_TRAIN where store_id in (13,14,15,16,17,18)"'),httpheader=c(DB='jdbc:oracle:thin:@aevum.cs.utexas.edu:1521/f16pdb', USER='cs329e_qmn76', PASS='orcl_qmn76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
#walmart_train4 <- data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:5001/rest/native/?query="select * from WALMART_TRAIN where store_id in (19,20,21,22,23,24)"'),httpheader=c(DB='jdbc:oracle:thin:@aevum.cs.utexas.edu:1521/f16pdb', USER='cs329e_qmn76', PASS='orcl_qmn76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
#walmart_train5 <- data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:5001/rest/native/?query="select * from WALMART_TRAIN where store_id in (25,26,27,28,29,30)"'),httpheader=c(DB='jdbc:oracle:thin:@aevum.cs.utexas.edu:1521/f16pdb', USER='cs329e_qmn76', PASS='orcl_qmn76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
# Combine data
walmart_train = rbind(walmart_train1, walmart_train2)
walmart_features$DATE_OF_WEEK <- as.Date(walmart_features$DATE_OF_WEEK, "%m/%d/%Y")
walmart_train$DATE_OF_WEEK <- as.Date(walmart_train$DATE_OF_WEEK, "%Y-%m-%d")
data = merge(merge(walmart_train, walmart_features, by=c("STORE_ID","DATE_OF_WEEK"), all=FALSE),walmart_stores, by="STORE_ID")
data$ISHOLIDAY = data$ISHOLIDAY.x
data$ISHOLIDAY.x = NULL
data$ISHOLIDAY.y = NULL
data
names(data)
df <- data
n <- 5
avg_sales_df <- df %>% group_by(STORE_ID) %>% summarise(AVG_SALES=mean(WEEKLY_SALES)) %>% arrange(desc(AVG_SALES))
avg_sales_df
runApp()
